name: Backend CI/CD

on:
  push:
    branches: [ "main" ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      # 检出代码仓库
      - name: Checkout code
        uses: actions/checkout@v3

      # 设置 Java 环境（安装 Java 8）
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: '8'
          distribution: 'adopt'

      # 使用 Maven 编译打包（跳过测试）
      - name: Build with Maven
        run: mvn -B clean package -DskipTests

      # 将构建产物部署到远程服务器
      - name: Deploy to Server via SCP and SSH
        env:
          SERVER_HOST: ${{ secrets.SERVER_HOST }}
          SERVER_USER: ${{ secrets.SERVER_USER }}
          SERVER_SSH_KEY: ${{ secrets.SERVER_SSH_KEY }}
        run: |
          set -e

          echo "Write key"
          cat <<EOF > /tmp/deploy_key.pem
          $SERVER_SSH_KEY
          EOF
          chmod 600 /tmp/deploy_key.pem

          echo "List JAR"
          ls -lh target/

          echo "Test SCP"
          scp -v -o StrictHostKeyChecking=no -i /tmp/deploy_key.pem target/*.jar $SERVER_USER@$SERVER_HOST:/home/jojo/ics3u-server/app.jar

          echo "Test SSH kill process"
          ssh -v -o StrictHostKeyChecking=no -i /tmp/deploy_key.pem $SERVER_USER@$SERVER_HOST "
            echo 'Checking running processes...'
            ps aux | grep '[j]ava.*app.jar'
            echo 'Killing existing processes...'
            pkill -f 'java -jar.*app.jar' || kill -9 \$(pgrep -f 'java -jar.*app.jar') || true
            sleep 2
          "

          echo "Test SSH start"
          ssh -v -o StrictHostKeyChecking=no -i /tmp/deploy_key.pem $SERVER_USER@$SERVER_HOST "
            echo 'Launching new jar...'
            nohup java -jar /home/jojo/ics3u-server/app.jar > /home/jojo/ics3u-server/server.log 2>&1 &
            disown
            echo 'Server started.'
          "
      
